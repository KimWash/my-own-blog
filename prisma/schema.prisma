generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model File {
  id         Int       @id @default(autoincrement())
  type       String?   @db.VarChar(10)
  create_dt  DateTime? @db.DateTime(0)
  delete_dt  DateTime? @db.DateTime(0)
  is_deleted Boolean?  @db.Bit(1)
  quality    String?   @db.VarChar(10)
  name       String?   @db.VarChar(45)
  mediaId    Int?
  media      Media?    @relation(fields: [mediaId], references: [id])

  @@index([mediaId], map: "File_mediaId_fkey")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Media {
  id        Int       @id @default(autoincrement())
  type      String?   @db.VarChar(10)
  create_dt DateTime? @db.DateTime(0)
  name      String?   @db.VarChar(45)
  files     File[]
  postId    Int?
  post      Post?     @relation(fields: [postId], references: [id])

  @@index([postId], map: "Media_postId_fkey")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Post {
  title       String        @db.VarChar(30)
  create_dt   DateTime?     @db.DateTime(0)
  thumbnail   Int
  id          Int           @id @default(autoincrement())
  description String?       @db.Text
  content     String?       @db.Text
  update_dt   DateTime?     @db.DateTime(0)
  delete_dt   DateTime?     @db.DateTime(0)
  is_deleted  Boolean?      @db.Bit(1)
  medias      Media[]
  tags        TagsOnPosts[]
}

model TagsOnPosts {
  post_id Int
  post    Post @relation(fields: [post_id], references: [id])
  tag_id  Int
  tag     Tag  @relation(fields: [tag_id], references: [id])

  @@id([post_id, tag_id])
}

model Tag {
  id         Int           @id
  name       String?       @db.VarChar(45)
  create_dt  DateTime?     @db.DateTime(0)
  is_deleted Boolean?      @db.Bit(1)
  post_id    Int?
  post       TagsOnPosts[]
}
